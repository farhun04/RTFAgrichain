{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\CryptograpicFarming\\\\cryptographicfarming\\\\src\\\\Deposit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Deposit = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    roll_no: '',\n    department: '',\n    message: '',\n    mentor_name: '',\n    deposit_amount: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send a POST request to your deposit route\n      const response = await fetch('/api/deposit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        // Handle successful deposit confirmation\n        // You can also handle blockchain transaction confirmation here\n        console.log('Deposit recorded successfully');\n      } else {\n        // Handle error responses from the server\n        console.error('Deposit request failed.');\n      }\n    } catch (error) {\n      console.error('Error while processing deposit:', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deposit Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Deposit, \"gdZ3ulpPVzGgK/nJfjdKaXUawWc=\");\n_c = Deposit;\nexport default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Deposit","_s","formData","setFormData","name","roll_no","department","message","mentor_name","deposit_amount","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","handleChange","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/CryptograpicFarming/cryptographicfarming/src/Deposit.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Deposit = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    roll_no: '',\r\n    department: '',\r\n    message: '',\r\n    mentor_name: '',\r\n    deposit_amount: '',\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send a POST request to your deposit route\r\n      const response = await fetch('/api/deposit', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Handle successful deposit confirmation\r\n        // You can also handle blockchain transaction confirmation here\r\n        console.log('Deposit recorded successfully');\r\n      } else {\r\n        // Handle error responses from the server\r\n        console.error('Deposit request failed.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while processing deposit:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Deposit Form</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form fields here */}\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n        />\r\n        {/* Other form fields */}\r\n        <button type=\"submit\">Deposit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deposit;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAIW,QAAQ,CAACO,EAAE,EAAE;QACf;QACA;QACAC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC9C,CAAC,MAAM;QACL;QACAD,OAAO,CAACE,KAAK,CAAC,yBAAyB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAMC,YAAY,GAAIb,CAAC,IAAK;IAC1B,MAAM;MAAEP,IAAI;MAAEqB;IAAM,CAAC,GAAGd,CAAC,CAACe,MAAM;IAChCvB,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACE,IAAI,GAAGqB;IACV,CAAC,CAAC;EACJ,CAAC;EAED,oBACE1B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhC,OAAA;MAAMiC,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,gBAE3B5B,OAAA;QACEkC,IAAI,EAAC,MAAM;QACX7B,IAAI,EAAC,MAAM;QACX8B,WAAW,EAAC,MAAM;QAClBT,KAAK,EAAEvB,QAAQ,CAACE,IAAK;QACrB+B,QAAQ,EAAEX;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAEFhC,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA5DID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AA8Db,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}