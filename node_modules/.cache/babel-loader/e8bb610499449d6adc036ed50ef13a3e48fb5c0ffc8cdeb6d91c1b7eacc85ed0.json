{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\CryptograpicFarming\\\\cryptographicfarming\\\\src\\\\VoteFarmer.js\";\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport { contractAddress, abi } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function VoteFarmer() {\n  console.log(\"a\");\n  if (typeof window.ethereum !== \"undefined\") {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    var b = localStorage.getItem('vote');\n    await provider.send('eth_requestAccounts', []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n    var a = contract.voting(b);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"VoteFarmer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = VoteFarmer;\nexport default VoteFarmer;\nvar _c;\n$RefreshReg$(_c, \"VoteFarmer\");","map":{"version":3,"names":["React","ethers","contractAddress","abi","jsxDEV","_jsxDEV","VoteFarmer","console","log","window","ethereum","provider","providers","Web3Provider","accounts","send","b","localStorage","getItem","signer","getSigner","contract","Contract","a","voting","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/CryptograpicFarming/cryptographicfarming/src/VoteFarmer.js"],"sourcesContent":["import React from 'react'\r\nimport {ethers} from 'ethers'\r\nimport {contractAddress,abi} from './constants'\r\n\r\nasync function VoteFarmer() {\r\n    console.log(\"a\")\r\n    \r\n    if (typeof window.ethereum !== \"undefined\") {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n        const accounts =  await provider.send(\"eth_requestAccounts\", []);\r\n       var b=localStorage.getItem('vote')\r\n        await provider.send('eth_requestAccounts', [])\r\n        const signer = provider.getSigner()\r\n        const contract = new ethers.Contract(contractAddress, abi, signer)\r\n        var a=contract.voting(b);\r\n        \r\n      }\r\n\r\n  return (\r\n    <div>VoteFarmer</div>\r\n  )\r\n}\r\n\r\nexport default VoteFarmer"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,QAAQ;AAC7B,SAAQC,eAAe,EAACC,GAAG,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAeC,UAAUA,CAAA,EAAG;EACxBC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAEhB,IAAI,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxC,MAAMC,QAAQ,GAAG,IAAIV,MAAM,CAACW,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMI,QAAQ,GAAI,MAAMH,QAAQ,CAACI,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IACjE,IAAIC,CAAC,GAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACjC,MAAMP,QAAQ,CAACI,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC9C,MAAMI,MAAM,GAAGR,QAAQ,CAACS,SAAS,CAAC,CAAC;IACnC,MAAMC,QAAQ,GAAG,IAAIpB,MAAM,CAACqB,QAAQ,CAACpB,eAAe,EAAEC,GAAG,EAAEgB,MAAM,CAAC;IAClE,IAAII,CAAC,GAACF,QAAQ,CAACG,MAAM,CAACR,CAAC,CAAC;EAE1B;EAEJ,oBACEX,OAAA;IAAAoB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEzB;AAACC,EAAA,GAjBcxB,UAAU;AAmBzB,eAAeA,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}