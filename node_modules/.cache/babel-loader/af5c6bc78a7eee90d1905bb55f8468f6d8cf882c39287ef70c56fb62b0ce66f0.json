{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UploadManager = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst p_limit_1 = __importDefault(require(\"p-limit\"));\nconst enums_1 = require(\"./spheron-api/enums\");\nclass UploadManager {\n  constructor(apiUrl) {\n    this.spheronApiUrl = apiUrl !== null && apiUrl !== void 0 ? apiUrl : \"https://api-v2.spheron.network\";\n  }\n  initiateUpload(configuration) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        this.validateUploadConfiguration(configuration);\n        let url = `${this.spheronApiUrl}/v1/upload/initiate?protocol=${configuration.protocol}&bucket=${configuration.name}`;\n        if (configuration.organizationId) {\n          url += `&organization=${configuration.organizationId}`;\n        }\n        if (configuration.createSingleUseToken) {\n          url += `&create_single_use_token=${configuration.createSingleUseToken}`;\n        }\n        const response = yield axios_1.default.post(url, {}, {\n          headers: {\n            Authorization: `Bearer ${configuration.token}`\n          }\n        });\n        return response.data;\n      } catch (error) {\n        const errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n        throw new Error(errorMessage);\n      }\n    });\n  }\n  pinCID(configuration) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (!configuration.name) {\n          throw new Error(\"Bucket name is not provided.\");\n        }\n        let url = `${this.spheronApiUrl}/v2/ipfs/pin/${configuration.cid}?bucket=${configuration.name}`;\n        if (configuration.organizationId) {\n          url += `&organization=${configuration.organizationId}`;\n        }\n        const response = yield axios_1.default.post(url, {}, {\n          headers: {\n            Authorization: `Bearer ${configuration.token}`\n          }\n        });\n        return response.data;\n      } catch (error) {\n        const errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n        throw new Error(errorMessage);\n      }\n    });\n  }\n  getCIDStatus(CID) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (!CID) {\n          throw new Error(\"CID is not provided.\");\n        }\n        const url = `${this.spheronApiUrl}/v2/ipfs/pins/${CID}/status`;\n        const response = yield axios_1.default.get(url);\n        return response.data;\n      } catch (error) {\n        const errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n        throw new Error(errorMessage);\n      }\n    });\n  }\n  uploadPayloads(payloads, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let errorMessage = \"\";\n      const limit = (0, p_limit_1.default)(configuration.parallelUploadCount);\n      const uploadPayload = (payload, uploadId) => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        try {\n          if (errorMessage) {\n            return;\n          }\n          const {\n            data\n          } = yield axios_1.default.post(`${this.spheronApiUrl}/v1/upload/${uploadId}/data`, payload, this.getAxiosRequestConfig(configuration.token));\n          configuration.onChunkUploaded && configuration.onChunkUploaded(data.uploadSize);\n        } catch (error) {\n          errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n        }\n      });\n      yield Promise.all(payloads.map(payload => limit(() => uploadPayload(payload, configuration.uploadId))));\n      return {\n        success: !errorMessage,\n        errorMessage: errorMessage\n      };\n    });\n  }\n  finalizeUpload(uploadId, upload, token) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const response = yield axios_1.default.post(`${this.spheronApiUrl}/v1/upload/${uploadId}/finish?action=${upload ? \"UPLOAD\" : \"CANCEL\"}`, {}, this.getAxiosRequestConfig(token));\n        return response.data;\n      } catch (error) {\n        const errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n        throw new Error(errorMessage);\n      }\n    });\n  }\n  validateUploadConfiguration(configuration) {\n    const supportedProtocols = Object.values(enums_1.ProtocolEnum);\n    if (supportedProtocols.indexOf(configuration.protocol) === -1) {\n      throw new Error(`Protocol '${configuration.protocol}' is not supported. Supported protocols are [${supportedProtocols.join(\", \")}].`);\n    }\n    if (!configuration.name) {\n      throw new Error(\"Bucket name is not provided.\");\n    }\n  }\n  getAxiosRequestConfig(token) {\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n  }\n}\nexports.UploadManager = UploadManager;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","UploadManager","axios_1","require","p_limit_1","enums_1","constructor","apiUrl","spheronApiUrl","initiateUpload","configuration","_a","_b","validateUploadConfiguration","url","protocol","name","organizationId","createSingleUseToken","response","default","post","headers","Authorization","token","data","error","errorMessage","message","Error","pinCID","cid","getCIDStatus","CID","get","uploadPayloads","payloads","limit","parallelUploadCount","uploadPayload","payload","uploadId","getAxiosRequestConfig","onChunkUploaded","uploadSize","all","map","success","finalizeUpload","upload","supportedProtocols","values","ProtocolEnum","indexOf","join"],"sources":["C:/Users/moham/OneDrive/Desktop/CryptograpicFarming/cryptographicfarming/node_modules/@spheron/core/dist/upload-manager.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UploadManager = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst p_limit_1 = __importDefault(require(\"p-limit\"));\nconst enums_1 = require(\"./spheron-api/enums\");\nclass UploadManager {\n    constructor(apiUrl) {\n        this.spheronApiUrl = apiUrl !== null && apiUrl !== void 0 ? apiUrl : \"https://api-v2.spheron.network\";\n    }\n    initiateUpload(configuration) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.validateUploadConfiguration(configuration);\n                let url = `${this.spheronApiUrl}/v1/upload/initiate?protocol=${configuration.protocol}&bucket=${configuration.name}`;\n                if (configuration.organizationId) {\n                    url += `&organization=${configuration.organizationId}`;\n                }\n                if (configuration.createSingleUseToken) {\n                    url += `&create_single_use_token=${configuration.createSingleUseToken}`;\n                }\n                const response = yield axios_1.default.post(url, {}, {\n                    headers: {\n                        Authorization: `Bearer ${configuration.token}`,\n                    },\n                });\n                return response.data;\n            }\n            catch (error) {\n                const errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n                throw new Error(errorMessage);\n            }\n        });\n    }\n    pinCID(configuration) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!configuration.name) {\n                    throw new Error(\"Bucket name is not provided.\");\n                }\n                let url = `${this.spheronApiUrl}/v2/ipfs/pin/${configuration.cid}?bucket=${configuration.name}`;\n                if (configuration.organizationId) {\n                    url += `&organization=${configuration.organizationId}`;\n                }\n                const response = yield axios_1.default.post(url, {}, {\n                    headers: {\n                        Authorization: `Bearer ${configuration.token}`,\n                    },\n                });\n                return response.data;\n            }\n            catch (error) {\n                const errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n                throw new Error(errorMessage);\n            }\n        });\n    }\n    getCIDStatus(CID) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!CID) {\n                    throw new Error(\"CID is not provided.\");\n                }\n                const url = `${this.spheronApiUrl}/v2/ipfs/pins/${CID}/status`;\n                const response = yield axios_1.default.get(url);\n                return response.data;\n            }\n            catch (error) {\n                const errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n                throw new Error(errorMessage);\n            }\n        });\n    }\n    uploadPayloads(payloads, configuration) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let errorMessage = \"\";\n            const limit = (0, p_limit_1.default)(configuration.parallelUploadCount);\n            const uploadPayload = (payload, uploadId) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                try {\n                    if (errorMessage) {\n                        return;\n                    }\n                    const { data } = yield axios_1.default.post(`${this.spheronApiUrl}/v1/upload/${uploadId}/data`, payload, this.getAxiosRequestConfig(configuration.token));\n                    configuration.onChunkUploaded &&\n                        configuration.onChunkUploaded(data.uploadSize);\n                }\n                catch (error) {\n                    errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n                }\n            });\n            yield Promise.all(payloads.map((payload) => limit(() => uploadPayload(payload, configuration.uploadId))));\n            return { success: !errorMessage, errorMessage: errorMessage };\n        });\n    }\n    finalizeUpload(uploadId, upload, token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const response = yield axios_1.default.post(`${this.spheronApiUrl}/v1/upload/${uploadId}/finish?action=${upload ? \"UPLOAD\" : \"CANCEL\"}`, {}, this.getAxiosRequestConfig(token));\n                return response.data;\n            }\n            catch (error) {\n                const errorMessage = ((_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || (error === null || error === void 0 ? void 0 : error.message);\n                throw new Error(errorMessage);\n            }\n        });\n    }\n    validateUploadConfiguration(configuration) {\n        const supportedProtocols = Object.values(enums_1.ProtocolEnum);\n        if (supportedProtocols.indexOf(configuration.protocol) === -1) {\n            throw new Error(`Protocol '${configuration.protocol}' is not supported. Supported protocols are [${supportedProtocols.join(\", \")}].`);\n        }\n        if (!configuration.name) {\n            throw new Error(\"Bucket name is not provided.\");\n        }\n    }\n    getAxiosRequestConfig(token) {\n        return {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        };\n    }\n}\nexports.UploadManager = UploadManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}