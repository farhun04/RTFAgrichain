{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertJsonToFile = exports.uint8arrayToString = exports.uint8arrayFromString = exports.uint8ArrayToBase64 = exports.base64ToUint8Array = exports.utf8Decode = void 0;\nfunction utf8Encode(str) {\n  const utf8Array = [];\n  for (let i = 0; i < str.length; i++) {\n    let charCode = str.charCodeAt(i);\n    if (charCode < 128) {\n      utf8Array.push(charCode);\n    } else if (charCode < 2048) {\n      utf8Array.push(192 | charCode >> 6, 128 | charCode & 63);\n    } else if ((charCode & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      charCode = 0x10000 + ((charCode & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      utf8Array.push(240 | charCode >> 18, 128 | charCode >> 12 & 63, 128 | charCode >> 6 & 63, 128 | charCode & 63);\n    } else {\n      utf8Array.push(224 | charCode >> 12, 128 | charCode >> 6 & 63, 128 | charCode & 63);\n    }\n  }\n  return new Uint8Array(utf8Array);\n}\nfunction utf8Decode(utf8Array) {\n  let str = \"\";\n  let i = 0;\n  while (i < utf8Array.length) {\n    let charCode = utf8Array[i++];\n    if (charCode < 128) {\n      str += String.fromCharCode(charCode);\n    } else if (charCode > 191 && charCode < 224) {\n      str += String.fromCharCode((charCode & 31) << 6 | utf8Array[i++] & 63);\n    } else if (charCode > 239 && charCode < 365) {\n      charCode = (charCode & 7) << 18 | (utf8Array[i++] & 63) << 12 | (utf8Array[i++] & 63) << 6 | utf8Array[i++] & 63;\n      charCode -= 0x10000;\n      str += String.fromCharCode(0xd800 + (charCode >> 10), 0xdc00 + (charCode & 0x3ff));\n    } else {\n      str += String.fromCharCode((charCode & 15) << 12 | (utf8Array[i++] & 63) << 6 | utf8Array[i++] & 63);\n    }\n  }\n  return str;\n}\nexports.utf8Decode = utf8Decode;\nfunction base64ToUint8Array(base64Str) {\n  const binaryStr = atob(base64Str);\n  const len = binaryStr.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryStr.charCodeAt(i);\n  }\n  return bytes;\n}\nexports.base64ToUint8Array = base64ToUint8Array;\nfunction uint8ArrayToBase64(uint8Array) {\n  const binaryStr = String.fromCharCode(...uint8Array);\n  return btoa(binaryStr);\n}\nexports.uint8ArrayToBase64 = uint8ArrayToBase64;\nfunction base64UrlPadToBase64(base64UrlPadStr) {\n  return base64UrlPadStr.replace(\"-\", \"+\").replace(\"_\", \"/\") + \"=\".repeat((4 - base64UrlPadStr.length % 4) % 4);\n}\nfunction base64ToBase64UrlPad(base64Str) {\n  return base64Str.replace(\"+\", \"-\").replace(\"/\", \"_\").replace(/=+$/, \"\");\n}\nfunction uint8arrayFromString(str, encoding = \"utf8\") {\n  switch (encoding) {\n    case \"utf8\":\n      return utf8Encode(str);\n    case \"base16\":\n      {\n        const arr = [];\n        for (let i = 0; i < str.length; i += 2) {\n          arr.push(parseInt(str.slice(i, i + 2), 16));\n        }\n        return new Uint8Array(arr);\n      }\n    case \"base64\":\n      return base64ToUint8Array(str);\n    case \"base64urlpad\" || \"base64url\":\n      return base64ToUint8Array(base64UrlPadToBase64(str));\n    default:\n      throw new Error(`Unsupported encoding \"${encoding}\"`);\n  }\n}\nexports.uint8arrayFromString = uint8arrayFromString;\nfunction uint8arrayToString(uint8array, encoding = \"utf8\") {\n  const _uint8array = new Uint8Array(uint8array);\n  switch (encoding) {\n    case \"utf8\":\n      return utf8Decode(_uint8array);\n    case \"base16\":\n      return Array.from(_uint8array).map(byte => byte.toString(16).padStart(2, \"0\")).join(\"\");\n    case \"base64\":\n      return uint8ArrayToBase64(_uint8array);\n    case \"base64urlpad\":\n      return base64ToBase64UrlPad(uint8ArrayToBase64(_uint8array));\n    default:\n      throw new Error(`Unsupported encoding \"${encoding}\"`);\n  }\n}\nexports.uint8arrayToString = uint8arrayToString;\nconst convertJsonToFile = (jsonData, fileName) => {\n  const blob = new Blob([JSON.stringify(jsonData)], {\n    type: \"application/json\"\n  });\n  const file = new File([blob], fileName, {\n    type: \"application/json\"\n  });\n  return file;\n};\nexports.convertJsonToFile = convertJsonToFile;","map":{"version":3,"names":["Object","defineProperty","exports","value","convertJsonToFile","uint8arrayToString","uint8arrayFromString","uint8ArrayToBase64","base64ToUint8Array","utf8Decode","utf8Encode","str","utf8Array","i","length","charCode","charCodeAt","push","Uint8Array","String","fromCharCode","base64Str","binaryStr","atob","len","bytes","uint8Array","btoa","base64UrlPadToBase64","base64UrlPadStr","replace","repeat","base64ToBase64UrlPad","encoding","arr","parseInt","slice","Error","uint8array","_uint8array","Array","from","map","byte","toString","padStart","join","jsonData","fileName","blob","Blob","JSON","stringify","type","file","File"],"sources":["C:/Users/moham/OneDrive/Desktop/CryptograpicFarming/cryptographicfarming/node_modules/@spheron/encryption/dist/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertJsonToFile = exports.uint8arrayToString = exports.uint8arrayFromString = exports.uint8ArrayToBase64 = exports.base64ToUint8Array = exports.utf8Decode = void 0;\nfunction utf8Encode(str) {\n    const utf8Array = [];\n    for (let i = 0; i < str.length; i++) {\n        let charCode = str.charCodeAt(i);\n        if (charCode < 128) {\n            utf8Array.push(charCode);\n        }\n        else if (charCode < 2048) {\n            utf8Array.push(192 | (charCode >> 6), 128 | (charCode & 63));\n        }\n        else if ((charCode & 0xfc00) === 0xd800 &&\n            i + 1 < str.length &&\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            charCode =\n                0x10000 + ((charCode & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            utf8Array.push(240 | (charCode >> 18), 128 | ((charCode >> 12) & 63), 128 | ((charCode >> 6) & 63), 128 | (charCode & 63));\n        }\n        else {\n            utf8Array.push(224 | (charCode >> 12), 128 | ((charCode >> 6) & 63), 128 | (charCode & 63));\n        }\n    }\n    return new Uint8Array(utf8Array);\n}\nfunction utf8Decode(utf8Array) {\n    let str = \"\";\n    let i = 0;\n    while (i < utf8Array.length) {\n        let charCode = utf8Array[i++];\n        if (charCode < 128) {\n            str += String.fromCharCode(charCode);\n        }\n        else if (charCode > 191 && charCode < 224) {\n            str += String.fromCharCode(((charCode & 31) << 6) | (utf8Array[i++] & 63));\n        }\n        else if (charCode > 239 && charCode < 365) {\n            charCode =\n                ((charCode & 7) << 18) |\n                    ((utf8Array[i++] & 63) << 12) |\n                    ((utf8Array[i++] & 63) << 6) |\n                    (utf8Array[i++] & 63);\n            charCode -= 0x10000;\n            str += String.fromCharCode(0xd800 + (charCode >> 10), 0xdc00 + (charCode & 0x3ff));\n        }\n        else {\n            str += String.fromCharCode(((charCode & 15) << 12) |\n                ((utf8Array[i++] & 63) << 6) |\n                (utf8Array[i++] & 63));\n        }\n    }\n    return str;\n}\nexports.utf8Decode = utf8Decode;\nfunction base64ToUint8Array(base64Str) {\n    const binaryStr = atob(base64Str);\n    const len = binaryStr.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binaryStr.charCodeAt(i);\n    }\n    return bytes;\n}\nexports.base64ToUint8Array = base64ToUint8Array;\nfunction uint8ArrayToBase64(uint8Array) {\n    const binaryStr = String.fromCharCode(...uint8Array);\n    return btoa(binaryStr);\n}\nexports.uint8ArrayToBase64 = uint8ArrayToBase64;\nfunction base64UrlPadToBase64(base64UrlPadStr) {\n    return (base64UrlPadStr.replace(\"-\", \"+\").replace(\"_\", \"/\") +\n        \"=\".repeat((4 - (base64UrlPadStr.length % 4)) % 4));\n}\nfunction base64ToBase64UrlPad(base64Str) {\n    return base64Str.replace(\"+\", \"-\").replace(\"/\", \"_\").replace(/=+$/, \"\");\n}\nfunction uint8arrayFromString(str, encoding = \"utf8\") {\n    switch (encoding) {\n        case \"utf8\":\n            return utf8Encode(str);\n        case \"base16\": {\n            const arr = [];\n            for (let i = 0; i < str.length; i += 2) {\n                arr.push(parseInt(str.slice(i, i + 2), 16));\n            }\n            return new Uint8Array(arr);\n        }\n        case \"base64\":\n            return base64ToUint8Array(str);\n        case \"base64urlpad\" || \"base64url\":\n            return base64ToUint8Array(base64UrlPadToBase64(str));\n        default:\n            throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n}\nexports.uint8arrayFromString = uint8arrayFromString;\nfunction uint8arrayToString(uint8array, encoding = \"utf8\") {\n    const _uint8array = new Uint8Array(uint8array);\n    switch (encoding) {\n        case \"utf8\":\n            return utf8Decode(_uint8array);\n        case \"base16\":\n            return Array.from(_uint8array)\n                .map((byte) => byte.toString(16).padStart(2, \"0\"))\n                .join(\"\");\n        case \"base64\":\n            return uint8ArrayToBase64(_uint8array);\n        case \"base64urlpad\":\n            return base64ToBase64UrlPad(uint8ArrayToBase64(_uint8array));\n        default:\n            throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n}\nexports.uint8arrayToString = uint8arrayToString;\nconst convertJsonToFile = (jsonData, fileName) => {\n    const blob = new Blob([JSON.stringify(jsonData)], {\n        type: \"application/json\",\n    });\n    const file = new File([blob], fileName, { type: \"application/json\" });\n    return file;\n};\nexports.convertJsonToFile = convertJsonToFile;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAGF,OAAO,CAACG,kBAAkB,GAAGH,OAAO,CAACI,oBAAoB,GAAGJ,OAAO,CAACK,kBAAkB,GAAGL,OAAO,CAACM,kBAAkB,GAAGN,OAAO,CAACO,UAAU,GAAG,KAAK,CAAC;AAC7K,SAASC,UAAUA,CAACC,GAAG,EAAE;EACrB,MAAMC,SAAS,GAAG,EAAE;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,IAAIE,QAAQ,GAAGJ,GAAG,CAACK,UAAU,CAACH,CAAC,CAAC;IAChC,IAAIE,QAAQ,GAAG,GAAG,EAAE;MAChBH,SAAS,CAACK,IAAI,CAACF,QAAQ,CAAC;IAC5B,CAAC,MACI,IAAIA,QAAQ,GAAG,IAAI,EAAE;MACtBH,SAAS,CAACK,IAAI,CAAC,GAAG,GAAIF,QAAQ,IAAI,CAAE,EAAE,GAAG,GAAIA,QAAQ,GAAG,EAAG,CAAC;IAChE,CAAC,MACI,IAAI,CAACA,QAAQ,GAAG,MAAM,MAAM,MAAM,IACnCF,CAAC,GAAG,CAAC,GAAGF,GAAG,CAACG,MAAM,IAClB,CAACH,GAAG,CAACK,UAAU,CAACH,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,MAAM,MAAM,EAAE;MAC7CE,QAAQ,GACJ,OAAO,IAAI,CAACA,QAAQ,GAAG,MAAM,KAAK,EAAE,CAAC,IAAIJ,GAAG,CAACK,UAAU,CAAC,EAAEH,CAAC,CAAC,GAAG,MAAM,CAAC;MAC1ED,SAAS,CAACK,IAAI,CAAC,GAAG,GAAIF,QAAQ,IAAI,EAAG,EAAE,GAAG,GAAKA,QAAQ,IAAI,EAAE,GAAI,EAAG,EAAE,GAAG,GAAKA,QAAQ,IAAI,CAAC,GAAI,EAAG,EAAE,GAAG,GAAIA,QAAQ,GAAG,EAAG,CAAC;IAC9H,CAAC,MACI;MACDH,SAAS,CAACK,IAAI,CAAC,GAAG,GAAIF,QAAQ,IAAI,EAAG,EAAE,GAAG,GAAKA,QAAQ,IAAI,CAAC,GAAI,EAAG,EAAE,GAAG,GAAIA,QAAQ,GAAG,EAAG,CAAC;IAC/F;EACJ;EACA,OAAO,IAAIG,UAAU,CAACN,SAAS,CAAC;AACpC;AACA,SAASH,UAAUA,CAACG,SAAS,EAAE;EAC3B,IAAID,GAAG,GAAG,EAAE;EACZ,IAAIE,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGD,SAAS,CAACE,MAAM,EAAE;IACzB,IAAIC,QAAQ,GAAGH,SAAS,CAACC,CAAC,EAAE,CAAC;IAC7B,IAAIE,QAAQ,GAAG,GAAG,EAAE;MAChBJ,GAAG,IAAIQ,MAAM,CAACC,YAAY,CAACL,QAAQ,CAAC;IACxC,CAAC,MACI,IAAIA,QAAQ,GAAG,GAAG,IAAIA,QAAQ,GAAG,GAAG,EAAE;MACvCJ,GAAG,IAAIQ,MAAM,CAACC,YAAY,CAAE,CAACL,QAAQ,GAAG,EAAE,KAAK,CAAC,GAAKH,SAAS,CAACC,CAAC,EAAE,CAAC,GAAG,EAAG,CAAC;IAC9E,CAAC,MACI,IAAIE,QAAQ,GAAG,GAAG,IAAIA,QAAQ,GAAG,GAAG,EAAE;MACvCA,QAAQ,GACH,CAACA,QAAQ,GAAG,CAAC,KAAK,EAAE,GAChB,CAACH,SAAS,CAACC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAG,GAC5B,CAACD,SAAS,CAACC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAE,GAC3BD,SAAS,CAACC,CAAC,EAAE,CAAC,GAAG,EAAG;MAC7BE,QAAQ,IAAI,OAAO;MACnBJ,GAAG,IAAIQ,MAAM,CAACC,YAAY,CAAC,MAAM,IAAIL,QAAQ,IAAI,EAAE,CAAC,EAAE,MAAM,IAAIA,QAAQ,GAAG,KAAK,CAAC,CAAC;IACtF,CAAC,MACI;MACDJ,GAAG,IAAIQ,MAAM,CAACC,YAAY,CAAE,CAACL,QAAQ,GAAG,EAAE,KAAK,EAAE,GAC5C,CAACH,SAAS,CAACC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAE,GAC3BD,SAAS,CAACC,CAAC,EAAE,CAAC,GAAG,EAAG,CAAC;IAC9B;EACJ;EACA,OAAOF,GAAG;AACd;AACAT,OAAO,CAACO,UAAU,GAAGA,UAAU;AAC/B,SAASD,kBAAkBA,CAACa,SAAS,EAAE;EACnC,MAAMC,SAAS,GAAGC,IAAI,CAACF,SAAS,CAAC;EACjC,MAAMG,GAAG,GAAGF,SAAS,CAACR,MAAM;EAC5B,MAAMW,KAAK,GAAG,IAAIP,UAAU,CAACM,GAAG,CAAC;EACjC,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,GAAG,EAAEX,CAAC,EAAE,EAAE;IAC1BY,KAAK,CAACZ,CAAC,CAAC,GAAGS,SAAS,CAACN,UAAU,CAACH,CAAC,CAAC;EACtC;EACA,OAAOY,KAAK;AAChB;AACAvB,OAAO,CAACM,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASD,kBAAkBA,CAACmB,UAAU,EAAE;EACpC,MAAMJ,SAAS,GAAGH,MAAM,CAACC,YAAY,CAAC,GAAGM,UAAU,CAAC;EACpD,OAAOC,IAAI,CAACL,SAAS,CAAC;AAC1B;AACApB,OAAO,CAACK,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASqB,oBAAoBA,CAACC,eAAe,EAAE;EAC3C,OAAQA,eAAe,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GACvD,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,GAAIF,eAAe,CAACf,MAAM,GAAG,CAAE,IAAI,CAAC,CAAC;AAC1D;AACA,SAASkB,oBAAoBA,CAACX,SAAS,EAAE;EACrC,OAAOA,SAAS,CAACS,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAC3E;AACA,SAASxB,oBAAoBA,CAACK,GAAG,EAAEsB,QAAQ,GAAG,MAAM,EAAE;EAClD,QAAQA,QAAQ;IACZ,KAAK,MAAM;MACP,OAAOvB,UAAU,CAACC,GAAG,CAAC;IAC1B,KAAK,QAAQ;MAAE;QACX,MAAMuB,GAAG,GAAG,EAAE;QACd,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;UACpCqB,GAAG,CAACjB,IAAI,CAACkB,QAAQ,CAACxB,GAAG,CAACyB,KAAK,CAACvB,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/C;QACA,OAAO,IAAIK,UAAU,CAACgB,GAAG,CAAC;MAC9B;IACA,KAAK,QAAQ;MACT,OAAO1B,kBAAkB,CAACG,GAAG,CAAC;IAClC,KAAK,cAAc,IAAI,WAAW;MAC9B,OAAOH,kBAAkB,CAACoB,oBAAoB,CAACjB,GAAG,CAAC,CAAC;IACxD;MACI,MAAM,IAAI0B,KAAK,CAAE,yBAAwBJ,QAAS,GAAE,CAAC;EAC7D;AACJ;AACA/B,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,kBAAkBA,CAACiC,UAAU,EAAEL,QAAQ,GAAG,MAAM,EAAE;EACvD,MAAMM,WAAW,GAAG,IAAIrB,UAAU,CAACoB,UAAU,CAAC;EAC9C,QAAQL,QAAQ;IACZ,KAAK,MAAM;MACP,OAAOxB,UAAU,CAAC8B,WAAW,CAAC;IAClC,KAAK,QAAQ;MACT,OAAOC,KAAK,CAACC,IAAI,CAACF,WAAW,CAAC,CACzBG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CACjDC,IAAI,CAAC,EAAE,CAAC;IACjB,KAAK,QAAQ;MACT,OAAOvC,kBAAkB,CAACgC,WAAW,CAAC;IAC1C,KAAK,cAAc;MACf,OAAOP,oBAAoB,CAACzB,kBAAkB,CAACgC,WAAW,CAAC,CAAC;IAChE;MACI,MAAM,IAAIF,KAAK,CAAE,yBAAwBJ,QAAS,GAAE,CAAC;EAC7D;AACJ;AACA/B,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/C,MAAMD,iBAAiB,GAAGA,CAAC2C,QAAQ,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC,EAAE;IAC9CM,IAAI,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACN,IAAI,CAAC,EAAED,QAAQ,EAAE;IAAEK,IAAI,EAAE;EAAmB,CAAC,CAAC;EACrE,OAAOC,IAAI;AACf,CAAC;AACDpD,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}