{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\CryptograpicFarming\\\\cryptographicfarming\\\\src\\\\DepositFarmer.js\";\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport { contractAddress, abi } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function DepositFarmer() {\n  console.log(\"a\");\n  if (typeof window.ethereum !== \"undefined\") {\n    const ethers = require(\"ethers\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, abi, signer);\n    const m = localStorage.getItem(\"funding\");\n    const transactionResponse = await contract.deposit({\n      value: ethers.utils.parseEther(m)\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"DepositFarmer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = DepositFarmer;\nexport default DepositFarmer;\nvar _c;\n$RefreshReg$(_c, \"DepositFarmer\");","map":{"version":3,"names":["React","ethers","contractAddress","abi","jsxDEV","_jsxDEV","DepositFarmer","console","log","window","ethereum","require","provider","providers","Web3Provider","signer","getSigner","contract","Contract","m","localStorage","getItem","transactionResponse","deposit","value","utils","parseEther","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/moham/OneDrive/Desktop/CryptograpicFarming/cryptographicfarming/src/DepositFarmer.js"],"sourcesContent":["import React from 'react'\r\nimport {ethers} from 'ethers'\r\nimport {contractAddress,abi} from './constants'\r\n\r\nasync function DepositFarmer() {\r\n    console.log(\"a\")\r\n    if (typeof window.ethereum !== \"undefined\") {\r\n        const ethers = require(\"ethers\")\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n        const signer = provider.getSigner()\r\n        const contract = new ethers.Contract(contractAddress, abi, signer)\r\n        const m=localStorage.getItem(\"funding\");\r\n        const transactionResponse = await contract.deposit({value:ethers.utils.parseEther(m)})\r\n        }\r\n  return (\r\n    <div>DepositFarmer</div>\r\n  )\r\n}\r\n\r\nexport default DepositFarmer"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,QAAQ;AAC7B,SAAQC,eAAe,EAACC,GAAG,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAeC,aAAaA,CAAA,EAAG;EAC3BC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChB,IAAI,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxC,MAAMT,MAAM,GAAGU,OAAO,CAAC,QAAQ,CAAC;IAChC,MAAMC,QAAQ,GAAG,IAAIX,MAAM,CAACY,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;IACnC,MAAMC,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,QAAQ,CAAChB,eAAe,EAAEC,GAAG,EAAEY,MAAM,CAAC;IAClE,MAAMI,CAAC,GAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACvC,MAAMC,mBAAmB,GAAG,MAAML,QAAQ,CAACM,OAAO,CAAC;MAACC,KAAK,EAACvB,MAAM,CAACwB,KAAK,CAACC,UAAU,CAACP,CAAC;IAAC,CAAC,CAAC;EACtF;EACN,oBACEd,OAAA;IAAAsB,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE5B;AAACC,EAAA,GAbc1B,aAAa;AAe5B,eAAeA,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}